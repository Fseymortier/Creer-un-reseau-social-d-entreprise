{"ast":null,"code":"import _slicedToArray from \"G:\\\\Programmation\\\\Formation_Dev\\\\Projet_7\\\\groupomania\\\\React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"G:\\\\Programmation\\\\Formation_Dev\\\\Projet_7\\\\groupomania\\\\React\\\\src\\\\components\\\\post\\\\Comment.js\";\n\nimport React, { useState } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport CommentService from \"../../services/comment.service\";\nimport AuthService from \"../../services/auth.service\";\nimport '../../styles/Post.css';\n\nvar Comment = function Comment() {\n  var currentUser = AuthService.getCurrentUser();\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var comments = CommentService.getAll();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      content = _useState2[0],\n      setContent = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      message = _useState4[0],\n      setMessage = _useState4[1];\n\n  function onChangeContent(e) {\n    var content = e.target.value;\n    setContent(content);\n  }\n\n  ;\n\n  function handleComment(e) {\n    e.preventdefault();\n    setMessage(\"\");\n    var comment = {\n      content: content,\n      postId: id,\n      userId: currentUser.id,\n      userNickname: currentUser.nickname\n    };\n    CommentService.create(comment).then(function (response) {\n      setMessage(response.data.message);\n      window.location.reload();\n    }, function (error) {\n      var resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      setMessage(resMessage);\n    });\n  }\n\n  ;\n\n  function VerifyKnowledge() {\n    console.log(comments);\n\n    for (var i = 0; i < comments.length; i++) {\n      var comment = comments[i];\n\n      if (comment.userId === currentUser.id) {\n        return /*#__PURE__*/React.createElement(\"button\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }\n        }, \"Modifier\");\n      }\n\n      ;\n    }\n\n    ;\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"Commentaire\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input_comment\",\n    id: \"content\",\n    required: true,\n    value: content,\n    onChange: onChangeContent,\n    name: \"content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"Ajouter\")), comments && comments.map(function (comment) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: comment.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, comment.userNickname), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, comment.content), /*#__PURE__*/React.createElement(VerifyKnowledge, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }));\n  }), \";\");\n};\n\nexport default Comment;","map":{"version":3,"names":["React","useState","useParams","CommentService","AuthService","Comment","currentUser","getCurrentUser","id","comments","getAll","content","setContent","message","setMessage","onChangeContent","e","target","value","handleComment","preventdefault","comment","postId","userId","userNickname","nickname","create","then","response","data","window","location","reload","error","resMessage","toString","VerifyKnowledge","console","log","i","length","map"],"sources":["G:/Programmation/Formation_Dev/Projet_7/groupomania/React/src/components/post/Comment.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport CommentService from \"../../services/comment.service\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport '../../styles/Post.css';\r\n\r\nconst Comment = () => {\r\n    const currentUser = AuthService.getCurrentUser();\r\n    const { id } = useParams();\r\n    const comments = CommentService.getAll();\r\n    const [content, setContent] = useState(\"\");  \r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    function onChangeContent(e) {\r\n        const content = e.target.value;\r\n        setContent(content);\r\n    };\r\n    function handleComment(e) {\r\n        e.preventdefault();\r\n        setMessage(\"\");\r\n        const comment = {\r\n            content: content,\r\n            postId: id,\r\n            userId: currentUser.id,\r\n            userNickname: currentUser.nickname\r\n        }\r\n        CommentService.create(comment)\r\n        .then((response) => {\r\n            setMessage(response.data.message);\r\n            window.location.reload();\r\n            },\r\n            (error) => {\r\n              const resMessage =\r\n                (error.response &&\r\n                  error.response.data &&\r\n                  error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n              setMessage(resMessage);\r\n            }\r\n          );\r\n    };\r\n    function VerifyKnowledge(){\r\n        console.log(comments);\r\n        for (let i = 0; i < comments.length; i++) {\r\n            const comment = comments[i];\r\n            if(comment.userId === currentUser.id){\r\n                return(\r\n                    <button>Modifier</button>\r\n                );\r\n            };\r\n        };\r\n    };\r\n    return(\r\n        <div>\r\n            <div>\r\n                <label>Commentaire</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"input_comment\"\r\n                    id=\"content\"\r\n                    required\r\n                    value={content}\r\n                    onChange={onChangeContent}\r\n                    name=\"content\"\r\n                />\r\n                <button>Ajouter</button>\r\n            </div>\r\n            {comments && comments.map((comment) =>(\r\n                <div key={comment.id}>\r\n                    <h3>{comment.userNickname}</h3>\r\n                    <p>{comment.content}</p>\r\n                    <VerifyKnowledge/>                 \r\n                </div>\r\n            ))};            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Comment;"],"mappings":"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"},"metadata":{},"sourceType":"module"}